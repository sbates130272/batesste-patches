#!/bin/bash
#
# Stephen Bates <sbates@raithlin>
#
# A simple script that generates patches for git-based projects. See
# the README.md for more information.

PROJECT=${PROJECT:-none}
BRANCH=${BRANCH:-none}
VERSION=${VERSION:-1}
COUNT=${COUNT:-1}
BASE_DIR=${BASE_DIR:-/home/batesste/Projects}

REPO_DIR=${BASE_DIR}/${PROJECT}
START_DIR=$(pwd)

  # The caller must specify the PROJECT and BRANCH on the command line
  # so we exit if it is not present. We also need to ensure this repo
  # is located in the right spot.

if [ ${PROJECT} == "none" ]; then
    echo "The caller must set PROJECT!"
    exit 1
else
    if [ ! -d ${REPO_DIR} ]; then
	echo "The directory ${REPO_DIR} does not exist!"
	exit 1
    fi
fi

if [ ${BRANCH} == "none" ]; then
    echo "The caller must set BRANCH!"
    exit 1
fi

if [ ! -d ${BASE_DIR}/batesste-patches ]; then
    echo "This repo is not where it should be (${START_DIR} != "
      "${BASE_DIR}/batesste-patches)."
    exit 1
fi

  # Add a cleanup function so we return to our start directory and do
  # other clean up tasks as needed.

function cleanup()
{
    cd $START_DIR
}

  # Add a function that generates the recipients for our patchset
  # based on the recipients files in this repo.

function recipients()
{
    if [ ! -f ${START_DIR}/${PROJECT}/recipients ]; then
       echo "The ${PROJECT}/recipients does not exist!"
       exit 1
    fi
    TO=""
    while read -r line ; do
	TO+=" --to $line "
    done < ${START_DIR}/${PROJECT}/recipients

    CC=""
    if [ -f ${START_DIR}/${PROJECT}/recipients-cc ]; then
	while read -r line ; do
	    CC+=" --cc $line "
	done < ${START_DIR}/${PROJECT}/recipients-cc
    fi
}

trap cleanup EXIT

  # Look for a recipients and an (optional) recipients-cc file and
  # populate the TO and CC variables accordingly.

recipients

  # Now we can cd into the $REPO_DIR and generate our patches. Note
  # we clean out any old patches first. We also ensure the output
  # directory exists

cd ${REPO_DIR}
rm -rf ${START_DIR}/${PROJECT}/${BRANCH}/v${VERSION}/*.patch

git format-patch -n -v ${VERSION} \
     $TO $CC \
   --cover-letter \
   -${COUNT} ${BRANCH} \
   -o ${START_DIR}/${PROJECT}/${BRANCH}/v${VERSION}

cleanup
